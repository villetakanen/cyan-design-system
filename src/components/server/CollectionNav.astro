---
import { getCollection } from 'astro:content';

interface link {
  href: string;
  text: string;
  icon?: string;
}

interface Props {
  collection: 'principles' | 'elements' | 'css';
  links?: link[];
}

const { collection, links } = Astro.props as Props;

const posts = await getCollection(collection);

const mergedLinks: link[] = links ? [...links] : [];

for (const post of posts) {
  mergedLinks.push({
    href: `/${collection}/${post.id}`,
    text: post.data.title || post.id,
    icon: post.data.icon,
  });
}

mergedLinks.sort((a, b) => a.text.localeCompare(b.text));

const collectionName = collection.charAt(0).toUpperCase() + collection.slice(1);
---
<nav class="collection-nav">
  <h3>{collectionName}</h3>
  <ul>
    { mergedLinks.map((link) => (
      <li>
        <a href={link.href}>
          {link.icon && <cn-icon small noun={link.icon}></cn-icon>}
          {link.text}
        </a>
      </li>
    ))}
  </ul>